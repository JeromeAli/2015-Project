library("xlsx", lib.loc="~/R/win-library/3.2")
install.packages('knitr')
install.packages('rmarkdown')
install.packages('pander')
install.packages("pander")
library(knitr)
knit2html("example.rmd")
knit2html("example.rmd")
FILE <- "example"
system(paste0("pandoc -o ", FILE, ".docx ", FILE, ".md"))
# installing/loading the package:
if(!require(installr)) { install.packages("installr"); require(installr)} #load / install+load installr
# Installing pandoc
install.pandoc()
system(paste0("pandoc -o ", FILE, ".docx ", FILE, ".md"))
setwd("C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/Last Year Project")
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE, startRow = 2, endRow = 65) #
pjt2
pjt1 <- read.xlsx("project dataset.xlsx", sheetIndex = 3, header = TRUE) # Sales
pjt1
pjt3 <- read.xlsx("project dataset.xlsx", sheetIndex = 2, header = TRUE) # Housing
library("xlsx", lib.loc="~/R/win-library/3.2")
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE, startRow = 2, endRow = 65) #
pjt2
pjt1 <- read.xlsx("project dataset.xlsx", sheetIndex = 3, header = TRUE) # Sales
pjt1
pjt3 <- read.xlsx("project dataset.xlsx", sheetIndex = 2, header = TRUE) # Housing
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE) #, startRow = 2, endRow = 65) #
pjt2
pjt1 <- read.xlsx("project dataset.xlsx", sheetIndex = 3, header = TRUE) # Sales
pjt1
pjt3 <- read.xlsx("project dataset.xlsx", sheetIndex = 2, header = TRUE)
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE, endRow = 65) #, startRow = 2, endRow = 65) #
pjt2
variable.names(pjt2)
pjt24 <- df[2:65,variable.names(pjt2)]
pjt24 <- df[2:65,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
pjt24 <- pjt2[2:65,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
pjt24
pjt2[1]
pjt2[(0,1)]
pjt2[1,]
x <- "Residnce"
pjt2[x]
pjt2[1,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
v<- pjt2[1,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
v
i <- "Residnce"
y <- "sales"
x1 <- "sq.ft"
x2 <- "rooms"
x3 <-  "bedrooms"
x4 <- "age"
x5 <- "bathrooms"
modProj =lm(y~ x1+ x2 +x3+x4 +x5, data =pjt24)
modProj =lm(y~ x1+ x2 +x3 +x4 +x5, data = pjt24)
?lm()
pjt24
pjt24 <- pjt2[2:64,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
modProj =lm(y ~ x1+ x2 +x3 +x4 +x5, data = pjt24)
modProj = lm(y ~ x1+ x2 +x3 +x4 +x5)
modProj = lm("sales"  ~   "sq.ft" + "rooms"   +  "bedrooms" + "age"   + "bathrooms")
modProj = lm("sales"  ~   "sq.ft" + "rooms"   +  "bedrooms" + "age"   + "bathrooms", data = pjt24)
pjt24
modProj = lm("sales"  ~   "sq.ft" + "rooms"   +  "bedrooms" + "age"   + "bathrooms", data = pjt2)
modProj = lm("sales"~ "sq.ft" +"rooms"+ "bedrooms" + "age"+ "bathrooms", data = pjt2)
pjt2
modProj = lm("sales"~ "sq.ft")
modProj = lm(y~ "sq.ft")
modProj = lm(y~ x2)
par(mfrow=c(2,2))
plot(x1,y)
x1
pjt2[x1]
lenght(pjt2[x1])
length(pjt2[x1])
lengths(pjt2[x1])
lengths(pjt2[y])
plot(x1,, data = pjt24 )
plot(pjt2$x1,pjt2$y )
plot(pjt24$x1,pjt24$y )
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE, endRow = 65) #, startRow = 2, endRow = 65) #
pjt2
pjt24 <- pjt2[2:64,c("Residnce",  "sales"  ,   "sq.ft"    , "rooms"   ,  "bedrooms" , "age"   ,    "bathrooms")]
plot(pjt24$x1,pjt24$y )
modProj = lm("sales"~ "sq.ft" +"rooms"+ "bedrooms" + "age"+ "bathrooms", data = pjt2)
library("WriteXLS", lib.loc="~/R/win-library/3.2")
library("yaml", lib.loc="~/R/win-library/3.2")
modProj = lm("sales"~ "sq.ft" +"rooms"+ "bedrooms" + "age"+ "bathrooms", data = pjt2)
pjt1 <- read.xlsx("project dataset.xlsx", sheetIndex = 3, header = TRUE) # Sales
pjt1 <- read.xlsx("project dataset.xlsx", sheetIndex = 3, header = TRUE) # Sales
pjt1
pjt3 <- read.xlsx("project dataset.xlsx", sheetIndex = 2, header = TRUE) # Housing
variable.names(pjt1)
pjt2 <- read.xlsx("project dataset.xlsx", sheetIndex = 1, header = TRUE, startRow= 2, endRow = 65) #, startRow = 2, endRow = 65) #
pjt2
modProj = lm(y~ x1, data = pjt2)
modProj = lm(y~ x1 +x2+x3+x4+x5, data = pjt2)
Summary(modProj)
summary(modProj)
plot(pjt2)
eg1=read.table("eg531.txt",header=T)
eg=eg1[-1]#remove first column
x=eg$value
y=eg$upkeep
setwd("C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis")
eg1=read.table("eg531.txt",header=T)
eg=eg1[-1]#remove first column
x=eg$value
y=eg$upkeep
xsq=x*x
mod1=lm(y~x+xsq)
summary(mod1)
library("MASS", lib.loc="C:/Program Files/R/R-3.2.2/library")
b=boxcox(y~x+xsq,lambda=seq(0,1,0.1))
lambda=b$x
lik=b$y
bc=cbind(lambda,lik)
bc[order(-lik),]
eg1=read.table("eg531.txt",header=T)
eg=eg1[-1]#remove first column
x=eg$value
y=eg$upkeep
b=boxcox(y~x+xsq,lambda=seq(0,1,0.1))
lambda=b$x
lik=b$y
bc=cbind(lambda,lik)
bc[order(-lik),]
eg
x=eg$Value
y=eg$Upkeep
xsq=x*x
mod1=lm(y~x+xsq)
summary(mod1)
b=boxcox(y~x+xsq,lambda=seq(0,1,0.1))
lambda=b$x
lik=b$y
bc=cbind(lambda,lik)
bc[order(-lik),]
ncvTest(mod1)#load car package test for noncontant variance
library(car)
setwd("C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project")
require(boot)
require(MASS)
require(nortest)
require (car)
require(xlsx)
source("TM191.r")
source("TM181.r")
cred= read.csv("credit2.csv", header= T)
summary(cred)
plot(cred)
# cred[1,]
i  <- cred$ID
y  <- cred$score # a numeric vector giving the credit scores calculated by the bank on a scale from 0 to 100
x1 <- cred$savings # a numeric vector giving the total personal savings of each customer ($'000)
x2 <- cred$income # a numeric vector giving the total net income of each customer ($'000)
t1 <- cred$time.address # a numeric vector giving the number of months each customer has lived at their current address.
t2 <- cred$time.employed # a numeric vector giving the number of months each customer has been with their urrent employer.
d1 <- cred$fte # Full-time employment, and FALSE otherwise
d2 <- cred$status # customer is single, or otherwise
# Modifying Data - increment ever value by 1
cred2 <- data.frame(ID = i,score=y +1 ,
savings= x1 + 1,
income= x2 +1,
address= t1 +1,
employed= t2 +1,
fte2= d1, stat=d2)
summary(cred2)
plot(cred2)
# Model 1
mod.cred2 <- lm(score~ savings+ income + address + employed +fte2 + stat, data= cred2)
summary(mod.cred2) #Adjusted $R^2$ 0.2742
anova(mod.cred2)
# Residuals
mod.cred2.res <- resid(mod.cred2)
mod.cred2.stdres = rstandard(mod.cred2)
# Residual Plots
par(mfrow=c(3,3))
plot(cred2$savings,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[3] )
plot(cred2$income,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[4] )
plot(cred2$address,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[5] )
plot(cred2$employed,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[6] )
plot(d1,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[7] )
plot(d2,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[8] )
plot(fitted(mod.cred2), mod.cred2.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred2.stdres, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred2.res,cex.main=0.75)
qqline(mod.cred2.res)
bc=boxcox(mod.cred2, lambda = seq(0,2,.05))
bc$x[which.max(bc$y)] # Gives MLE of lambda
#Transformation of response variable Model # 2
mod.cred22 <- lm(score^0.5~ savings+ income + address + employed +fte2 + stat, data= cred2)
summary(mod.cred22) # Adjusted $R^2$ 0.2471
anova(mod.cred22)
mod.cred22.res <- resid(mod.cred22)
mod.cred22.stdres = rstandard(mod.cred22)
par(mfrow=c(3,3))
plot(cred2$savings,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[3] )
plot(cred2$income,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[4] )
plot(cred2$address,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[5] )
plot(cred2$employed,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[6] )
plot(d1,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[7] )
plot(d2,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[8] )
plot(fitted(mod.cred22), mod.cred22.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred22.stdres, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred22.res,cex.main=0.75)
qqline(mod.cred22.res)
# Predictors need to be transform
boxTidwell(score^.5 ~  employed+savings+ income + address , other.x=~ + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ savings , other.x=~ + employed + income + address + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ income , other.x=~ + employed +savings  + address + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ address , other.x=~ + employed +savings  +income  + fte2 + stat, data= cred2, max.iter=50)
# Transformation of predictors
incomesq = I((cred2$income)^2.314 )
#incomeslog = log(cred2$income)# Why log it - well fuck you thats why
#employedlog = (cred2$employed)^2
employedsq = I((cred2$employed)^2.33 )
savings.sqrt.inv = I((cred2$savings)^-0.5353 )
address25 = I((cred2$address)^-0.2144 )
# Code Below uses fuction define the above sources
mod.cred222d <- lm(I(score^0.5)~ savings.sqrt.inv +incomesq + address25 + employedsq +fte2 + stat  , data= cred2)
summary(mod.cred222d)
Y= cred2$score^.5
a1 = savings.sqrt.inv
a2 = incomesq
a3 = address25
a4 = employedsq
anova(mod.cred222d)
mod.cred222d.res <- resid(mod.cred222d)
mod.cred222d.stdres = rstandard(mod.cred222d)
par(mfrow=c(3,3))
plot(a1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[2] )
plot(a2,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[3] )
plot(a3,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[4] )
plot(a4,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[5] )
plot(d1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[6] )
plot(d2,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[7] )
plot(int1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[8] )
plot(fitted(mod.cred222d), mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred222d.res, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred222d.res,cex.main=0.75)
qqline(mod.cred222d.res)
# Interaction Terms
mod.cred2222d <- step(mod.cred222d)
mod.cred222abd <- step.up(mod.cred222d)
summary(mod.cred222abd) #  Adjusted $R^2$ 0.4973
plot(mod.cred222abd)
# Not really important
Y= I(cred2$score^.5)
a1 = savings.sqrt.inv
a2 = incomesq
a3 = address25
a4 = employedsq
#int1 = incomeslog*employedlog
#int2 = address.sqrt.inv*stat
#int3 = employedlog*stat
# Final Model - Or least final one for the weekend
final.mod.cred <- lm( score^0.5 ~ savings.sqrt.inv + incomesq + address25 + employedsq + stat + incomesq:employedsq + address25:stat + employedsq:stat , data = cred2)
summary(final.mod.cred) # Adjusted $R^2$ -  0.4947
anova(final.mod.cred)
boxTidwell(score^0.5 ~ savings.sqrt.inv + incomesq + address25 + employedsq, other.x=~ +fte2 + stat, data= cred2, max.iter=50)
final.mod.cred.res <- resid(final.mod.cred)
final.cred222.stdres = rstandard(final.mod.cred)
par(mfrow=c(3,3))
plot(a1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[2] )
plot(a2,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[3] )
plot(a3,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[4] )
plot(a4,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[5] )
plot(d1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[6] )
plot(d2,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[7] )
plot(int1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[8] )
plot(fitted(final.mod.cred), final.cred222.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, final.mod.cred.res, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(final.mod.cred.res,cex.main=0.75)
qqline(final.mod.cred.res)
#********* Creates the  CV Fit ******************
par(mfrow=c(2,2))
plot(final.mod.cred,las=1)
yhat=round(fitted.values(final.mod.cred),3)
rstd=round(rstudent(final.mod.cred),3)
sresd=round(rstandard(final.mod.cred),3)
cooks=round(cooks.distance(final.mod.cred),3)
lev=round(hatvalues(final.mod.cred),3)
dbeta=round(dfbetas(final.mod.cred),3)
dfit=round(dffits(final.mod.cred),3)
cvr=round(covratio(final.mod.cred),3)
M=cbind(cred2,yhat,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
# Write to a excel file because its easier
write.xlsx(M, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal2.xlsx")
pred.r.squared <- pred_r_squared(final.mod.cred)
press <- PRESS(final.mod.cred)
pred.r.squared
mod2=lm(y~x1+x2+I(x2^2),data=work)
summary(mod2)
par(mfrow=c(2,2))
plot(mod2,las=1)
yhat=round(fitted.values(mod2),3)
rstd=round(rstudent(mod2),3)
sresd=round(rstandard(mod2),3)
cooks=round(cooks.distance(mod2),3)
lev=round(hatvalues(mod2),3)
dbeta=round(dfbetas(mod2),3)
dfit=round(dffits(mod2),3)
cvr=round(covratio(mod2),3)
M=cbind2(work,yhat,work,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
work=read.table("production.txt",header=T)
mod2=lm(y~x1+x2+I(x2^2),data=work)
summary(mod2)
par(mfrow=c(2,2))
plot(mod2,las=1)
yhat=round(fitted.values(mod2),3)
rstd=round(rstudent(mod2),3)
sresd=round(rstandard(mod2),3)
cooks=round(cooks.distance(mod2),3)
lev=round(hatvalues(mod2),3)
dbeta=round(dfbetas(mod2),3)
dfit=round(dffits(mod2),3)
cvr=round(covratio(mod2),3)
M=cbind(work,yhat,work,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
work=read.table("production.txt",header=T)
mod2=lm(y~x1+x2+I(x2^2),data=work)
summary(mod2)
par(mfrow=c(2,2))
plot(mod2,las=1)
yhat=round(fitted.values(mod2),3)
rstd=round(rstudent(mod2),3)
sresd=round(rstandard(mod2),3)
cooks=round(cooks.distance(mod2),3)
lev=round(hatvalues(mod2),3)
dbeta=round(dfbetas(mod2),3)
dfit=round(dffits(mod2),3)
cvr=round(covratio(mod2),3)
M=cbind(work,yhat,work,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
par(mfrow=c(2,2))
plot(final.mod.cred,las=1)
yhat=round(fitted.values(final.mod.cred),3)
rstd=round(rstudent(final.mod.cred),3)
sresd=round(rstandard(final.mod.cred),3)
cooks=round(cooks.distance(final.mod.cred),3)
lev=round(hatvalues(final.mod.cred),3)
dbeta=round(dfbetas(final.mod.cred),3)
dfit=round(dffits(final.mod.cred),3)
cvr=round(covratio(final.mod.cred),3)
M=cbind(yhat,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
M
write.xlsx(M, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal2.xlsx")
setwd("C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project")
require(boot)
require(MASS)
require(nortest)
require (car)
require(xlsx)
source("TM191.r")
source("TM181.r")
cred= read.csv("credit2.csv", header= T)
summary(cred)
plot(cred)
# cred[1,]
i  <- cred$ID
y  <- cred$score # a numeric vector giving the credit scores calculated by the bank on a scale from 0 to 100
x1 <- cred$savings # a numeric vector giving the total personal savings of each customer ($'000)
x2 <- cred$income # a numeric vector giving the total net income of each customer ($'000)
t1 <- cred$time.address # a numeric vector giving the number of months each customer has lived at their current address.
t2 <- cred$time.employed # a numeric vector giving the number of months each customer has been with their urrent employer.
d1 <- cred$fte # Full-time employment, and FALSE otherwise
d2 <- cred$status # customer is single, or otherwise
# Modifying Data - increment ever value by 1
cred2 <- data.frame(ID = i,score=y +1 ,
savings= x1 + 1,
income= x2 +1,
address= t1 +1,
employed= t2 +1,
fte2= d1, stat=d2)
summary(cred2)
plot(cred2)
# Model 1
mod.cred2 <- lm(score~ savings+ income + address + employed +fte2 + stat, data= cred2)
summary(mod.cred2) #Adjusted $R^2$ 0.2742
anova(mod.cred2)
# Residuals
mod.cred2.res <- resid(mod.cred2)
mod.cred2.stdres = rstandard(mod.cred2)
# Residual Plots
par(mfrow=c(3,3))
plot(cred2$savings,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[3] )
plot(cred2$income,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[4] )
plot(cred2$address,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[5] )
plot(cred2$employed,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[6] )
plot(d1,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[7] )
plot(d2,mod.cred2.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[8] )
plot(fitted(mod.cred2), mod.cred2.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred2.stdres, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred2.res,cex.main=0.75)
qqline(mod.cred2.res)
bc=boxcox(mod.cred2, lambda = seq(0,2,.05))
bc$x[which.max(bc$y)] # Gives MLE of lambda
#Transformation of response variable Model # 2
mod.cred22 <- lm(score^0.5~ savings+ income + address + employed +fte2 + stat, data= cred2)
summary(mod.cred22) # Adjusted $R^2$ 0.2471
anova(mod.cred22)
mod.cred22.res <- resid(mod.cred22)
mod.cred22.stdres = rstandard(mod.cred22)
par(mfrow=c(3,3))
plot(cred2$savings,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[3] )
plot(cred2$income,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[4] )
plot(cred2$address,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[5] )
plot(cred2$employed,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[6] )
plot(d1,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[7] )
plot(d2,mod.cred22.stdres, ylab = "Standardized Residuals", xlab = names(cred2)[8] )
plot(fitted(mod.cred22), mod.cred22.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred22.stdres, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred22.res,cex.main=0.75)
qqline(mod.cred22.res)
# Predictors need to be transform
boxTidwell(score^.5 ~  employed+savings+ income + address , other.x=~ + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ savings , other.x=~ + employed + income + address + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ income , other.x=~ + employed +savings  + address + fte2 + stat, data= cred2, max.iter=50)
boxTidwell(score^.5 ~ address , other.x=~ + employed +savings  +income  + fte2 + stat, data= cred2, max.iter=50)
# Transformation of predictors
incomesq = I((cred2$income)^2.314 )
#incomeslog = log(cred2$income)# Why log it - well fuck you thats why
#employedlog = (cred2$employed)^2
employedsq = I((cred2$employed)^2.33 )
savings.sqrt.inv = I((cred2$savings)^-0.5353 )
address25 = I((cred2$address)^-0.2144 )
# Code Below uses fuction define the above sources
mod.cred222d <- lm(I(score^0.5)~ savings.sqrt.inv +incomesq + address25 + employedsq +fte2 + stat  , data= cred2)
summary(mod.cred222d)
Y= cred2$score^.5
a1 = savings.sqrt.inv
a2 = incomesq
a3 = address25
a4 = employedsq
anova(mod.cred222d)
mod.cred222d.res <- resid(mod.cred222d)
mod.cred222d.stdres = rstandard(mod.cred222d)
par(mfrow=c(3,3))
plot(a1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[2] )
plot(a2,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[3] )
plot(a3,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[4] )
plot(a4,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[5] )
plot(d1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[6] )
plot(d2,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[7] )
plot(int1,mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = variable.names(mod.cred222d)[8] )
plot(fitted(mod.cred222d), mod.cred222d.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, mod.cred222d.res, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(mod.cred222d.res,cex.main=0.75)
qqline(mod.cred222d.res)
# Interaction Terms
mod.cred2222d <- step(mod.cred222d)
mod.cred222abd <- step.up(mod.cred222d)
summary(mod.cred222abd) #  Adjusted $R^2$ 0.4973
plot(mod.cred222abd)
# Not really important
Y= I(cred2$score^.5)
a1 = savings.sqrt.inv
a2 = incomesq
a3 = address25
a4 = employedsq
#int1 = incomeslog*employedlog
#int2 = address.sqrt.inv*stat
#int3 = employedlog*stat
# Final Model - Or least final one for the weekend
final.mod.cred <- lm( score^0.5 ~ savings.sqrt.inv + incomesq + address25 + employedsq + stat + incomesq:employedsq + address25:stat + employedsq:stat , data = cred2)
summary(final.mod.cred) # Adjusted $R^2$ -  0.4947
anova(final.mod.cred)
boxTidwell(score^0.5 ~ savings.sqrt.inv + incomesq + address25 + employedsq, other.x=~ +fte2 + stat, data= cred2, max.iter=50)
final.mod.cred.res <- resid(final.mod.cred)
final.cred222.stdres = rstandard(final.mod.cred)
par(mfrow=c(3,3))
plot(a1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[2] )
plot(a2,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[3] )
plot(a3,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[4] )
plot(a4,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[5] )
plot(d1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[6] )
plot(d2,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[7] )
plot(int1,final.cred222.stdres, ylab = "Standardized Residuals", xlab = variable.names(final.mod.cred)[8] )
plot(fitted(final.mod.cred), final.cred222.stdres, ylab = "Standardized Residuals", xlab = "Fitted Values")
plot(i, final.mod.cred.res, ylab = "Standardized Residuals", xlab = "Observation Order")
qqnorm(final.mod.cred.res,cex.main=0.75)
qqline(final.mod.cred.res)
#********* Creates the  CV Fit ******************
par(mfrow=c(2,2))
plot(final.mod.cred,las=1)
yhat=round(fitted.values(final.mod.cred),3)
rstd=round(rstudent(final.mod.cred),3)
sresd=round(rstandard(final.mod.cred),3)
cooks=round(cooks.distance(final.mod.cred),3)
lev=round(hatvalues(final.mod.cred),3)
dbeta=round(dfbetas(final.mod.cred),3)
dfit=round(dffits(final.mod.cred),3)
cvr=round(covratio(final.mod.cred),3)
M=cbind(yhat,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
# Write to a excel file because its easier
write.xlsx(M, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal2.xlsx")
pred.r.squared <- pred_r_squared(final.mod.cred)
press <- PRESS(final.mod.cred)
pred.r.squared
write.csv(M, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal2.csv")
write.xlsx(M, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal26.xlsx")
Mghbv =cbind(cred2,yhat,rstd,sresd,resid,cooks,lev,cvr,dfit,dbeta)
write.xlsx(cvr, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal26.xlsx")
Mghbv =cbind(cred2,yhat)
Mghbv =cbind(cred2,yhat,rstd)
Mghbv =cbind(cred2,yhat,rstd,sresd)
Mghbv =cbind(cred2,yhat,rstd,sresd, cooks)
Mghbv =cbind(cred2,yhat,rstd,sresd, cooks,lev)
Mghbv =cbind(cred2,yhat,rstd,sresd, cooks,lev,dbeta)
Mghbv =cbind(cred2,yhat,rstd,sresd, cooks,lev,dbeta,dfit)
Mghbv =cbind(cred2,yhat,rstd,sresd, cooks,lev,dbeta,dfit,cvr)
write.xlsx(Mghbv, "C:/Users/Jerome Jackson/Google Drive/Certified/R/School/Regressional Analysis/2015 Project/CVFinal256.xlsx")
